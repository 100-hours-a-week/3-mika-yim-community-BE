plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.mika.ktdcloud'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web' // 내장 웹 서버 제공 (Tomcat)
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.12.0' // 디버깅, 분석 로그 생성
    implementation 'org.springframework.boot:spring-boot-starter-validation' // 유효성 검사
    implementation 'org.springframework.security:spring-security-crypto:6.3.3' // BCryptPasswordEncoder 암호화 유틸
    compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // QueryDSL 라이브러리 추가
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    // Q클래스 자동 생성, 컴파일 시점에 실행됨
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta" // JPA 엔티티 클래스를 분석 후 Q클래스를 자동으로 만들어주는 코드 생성기
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // 어노테이션 인식
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // 어노테이션 인식
}

tasks.named('test') {
	useJUnitPlatform()
}

// Gradle clean 명령어로 이전에 생성된 Q클래스 삭제, 충돌 방지
clean {
    delete file('src/main/generated')
}